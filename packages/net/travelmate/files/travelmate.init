#!/bin/sh /etc/rc.common

START=25
USE_PROCD=1

EXTRA_COMMANDS="status"
EXTRA_HELP="	status	Print runtime information"

trm_init="/etc/init.d/travelmate"
trm_script="/usr/bin/travelmate.sh"
trm_pidfile="/var/run/travelmate.pid"

boot()
{
    ubus -t 30 wait_for network.interface network.wireless 2>/dev/null
    rc_procd start_service
}

start_service()
{
    if [ $("${trm_init}" enabled; printf "%u" ${?}) -eq 0 ]
    then
        procd_open_instance "travelmate"
        procd_set_param command "${trm_script}" "${@}"
        procd_set_param pidfile "${trm_pidfile}"
        procd_set_param stdout 1
        procd_set_param stderr 1
        procd_close_instance
    fi
}

reload_service()
{
    [ -s "${trm_pidfile}" ] && return 1
    rc_procd start_service
}

stop_service()
{
    rc_procd "${trm_script}" stop
    rc_procd start_service
}

status()
{
    local key keylist value rtfile="$(uci_get travelmate global trm_rtfile)"

    rtfile="${rtfile:-"/tmp/trm_runtime.json"}"
    if [ -s "${rtfile}" ]
    then
        printf "%s\n" "::: travelmate runtime information"
        json_load "$(cat "${rtfile}" 2>/dev/null)"
        json_select data
        json_get_keys keylist
        for key in ${keylist}
        do
            json_get_var value "${key}"
            printf "  + %-18s : %s\n" "${key}" "${value}"
        done
    else
        printf "%s\n" "::: no travelmate runtime information available"
    fi
}

service_triggers()
{
    local trigger="$(uci_get travelmate global trm_iface)"
    local delay="$(uci_get travelmate global trm_triggerdelay)"

    PROCD_RELOAD_DELAY=$((${delay:-2} * 1000))
    procd_add_interface_trigger "interface.*.down" "${trigger}" "${trm_init}" reload
    procd_add_reload_trigger "travelmate"
}
